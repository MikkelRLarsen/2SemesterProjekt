<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="changeButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAABcCAYAAABA4uO3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAADtFJREFUeF7tnelvXcUZh4//in6qSiltVUGgKJtDpTYICHEo/dAvoCaUlgRiB6pK
        FNqqVQsSrSA0pFBISkpiJ7YT27FJnCD2fd/3fd8EBEIS9sUkd6rfxK81Hp/tnjSmuvcZ6ZHtM9t75s59
        f7OcOU4u+8cFyQFJ0rJgxreTs+f/9LCFsw9Z2z53xq7Fc6bWTj3qh4YDAICmwvv/046ZWmufO2PnwtlT
        Os9ecPyUBdMPSL6TJC0rly9NkilJ0jIzSZKOebP+oEx/XnSi+9cF57muK1bVutd2OQAAaF6kBdKEPy06
        wZ169OFuyXGzzjoi2asdyUmtByYd81pP75jX6lYuv9ANbd4yMjA4VOvr73d9fX21UfQ7AAA0D3v9f3+/
        kyZIG1ZetNR1tM2UiJzxy1kHJclZvzju4PZjp9cuv+QiN7hpeHdvT49b39tbW79+vXAAANDU1KQJ0gZp
        xL8vXubaj52+5/cLfvaD5JSfHLzmr+0nuaHhrSO9Pd0+8YYNG8Yy63cAAGg+Qh2QNkgjpBV/aV/gTvnx
        wZcnHW0zd65Ydr4b2DjoVcZmHnFBAADQnIQzES1nXXbh311HW+u2RMtX67o6/T4H4gEAAGmYiPT19dfW
        da5x7XNn7En0mJZ22rVZgngAAEAW0ghphTRD2oGAAABAKRAQAACoRJqA+MMio3sgEzIAAACIUQHxmiHt
        QEAAAKAUCAgAAFQCAQEAgEogIAAAUAkEBAAAKoGAAABAJRAQAACoBAICAACVQEAAAKASCAgAAFQCAQEA
        gEogIAAAUAkEBAAAKoGAAABAJRAQAACoBAICAACVQEAAAKASCAgAAFQCAQEAgEogIAAAUAkEBAAAKoGA
        wBhlP++y6aqmL5s3L65KujSy8mZdz6MoT1F8TL3py+bNi4upJy00HggIjFHm81a/EPXkKZMmi7y8eXFG
        bG/ZfEVps66nYWnNDv3d29vriePqKbtsujTy8ubFGXG7lskDjYc+dwSkydHnbJ+1nFp3d3cma9eudV1d
        Xa6np2dc/rjMOE4/47KKCPNmlZtn77p168bstfJCJx6XGZefVofuO8+umDCtbJFN+ntgYMDT39/vy1ec
        yq7HPvsZ33cRefan3XMaYbvGeaF5sO8UAgLeGdx9993uzTffdK+88soEXn75Zffcc8+5hx56yF111VXe
        GeY5I0NxcpTK+9prr00oN41XX33VXX311eOEKkb133rrre6NN96YkF+89NJL7tlnn3UPP/ywu+GGG3yf
        luML7YrLjLE2UR2y/amnniqVV/FjX65Rp3377bd7m95//3336aefus8++8x99NFH7u2333ZPPPGE27p1
        q7evTJta/NfRruoHzz//vHvkkUfcNddc4+9PglPGZmgsEBDw6PPWiPKFF15wZcKePXu8c1beIocn56LR
        9sjISFxMbpATkzOLl6BCex977LE4W2b44IMP3H333eedZxmHl9YmH3/8canvhn2xZP91113nRaMo7N69
        2z355JNj4lNk3/9Du9ZqNS8qGzduLNWm0FggIOCx0fkzzzzjHYOcmUQiRM4idBwKGtHmjWaF+pEc3Sef
        fOLzqCyVL8f31VdfjUPXhOJvuummsSWfGHN0ml2E9pYJr7/+us9f5PDiNlHYsWNH4XcjFA/NOqytYvvC
        v8O21Wwi3B/Jqmsy2zUmtnvbtm3jbM2yGRoLBAQ85iw1q7Cg5ZUbb7zRL/8IOZ7777/fXzfnonDHHXf4
        vFl9xhydlm0syCkPDg76ZZstW7akojxp5Zm9oaOTI5ODlMO+5ZZb/Cj7tttu8/Zq2chG6WZzGeFLa5Od
        O3dm3qew61rW0fKOOVv7+e6777oHHnjAt+X111/vbdQSlMWbfZoBWJvGdYR1TUa7fvnll+7mm2/29qof
        qE/cc889Y7Mqs1lLm0U2Q2OBgIAnzVlqtC0nq9GqbZ6uWbPGOyE5FRt9asQcbqbGpDm6Rx991K1evdrH
        qY408kazsaNT+OKLL3ycbVbbJroYHh5227dv9+nM4d155525Di+tTYoExNAMQmKhYOKge7YNaGtP2djZ
        2ekFxexS0Kxh8+bNY7OkNCa7XcN+IJu1bGWDCYX33nvPl5lWLjQmCAh4spylNmktXuhvORKJhoWiZZ00
        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
</value>
  </data>
</root>