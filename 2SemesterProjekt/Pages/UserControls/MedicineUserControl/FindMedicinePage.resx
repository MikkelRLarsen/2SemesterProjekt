<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="changeButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>