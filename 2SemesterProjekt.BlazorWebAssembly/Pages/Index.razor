@page "/"
@using System.Net.Mail
@using System.Net
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject EmployeeService _employeeService
@inject DestinationService _destinationService
@inject MailService _mailService

<PageTitle>HundOgKat kørselsregistering</PageTitle>

<header>
	<h1 class="center-text">
		<img src="img\logo.png" class="logo" /> Kørselsregistrering
	</h1>
</header>

<br />
<div id="driver-selection">
	<h1 class="center-text">Hvem er ude og køre?</h1>
	<div class="driver-div justify-content-center">
		@* Loading screen *@
		@if (_employees == null)
		{
			<p>Indlæser...</p>
		}
		else
		{
			@* Finished load *@
			@foreach (var employee in _employees)
			{
				var selectedClass = _selectedEmployee == employee ? "selected" : "";

				<button class="driver-btn @selectedClass drive-button" type="submit" @onclick="@(() => RegisterDriver(employee))">@employee.Name</button>
			}
		}
	</div>
</div>

<br />

<div id="destination-selection" hidden="@_isHidden">
	<h1 class="center-text">Vælg destination</h1>
	<div class="destination-div justify-content-center">
		@* Loading screen *@
		@if (_destinations == null)
		{
			<p>Indlæser...</p>
		}
		else
		{
			@* Foreach loop with href method to make the app a two click applikation *@
			@foreach (var destination in _destinations)
			{
				<a class="destination-link" href="@_mailService.GenerateMail(_selectedEmployee!, destination)">
					<img src="img/@destination.LocationImage" alt="@destination.EndLocation" class="destination-image" />
					@destination.EndLocation
				</a>
			}
		}
	</div>
</div>

<div class="centered-container">
	<a href="/upload-employees">Tilføj medarbejder</a>
</div>

<div class="centered-container">
	<a href="/support">❓ Supportside</a>
</div>

@code {
	bool _isHidden = true;

	List<Employee>? _employees;
	List<Destination>? _destinations;

	Employee? _selectedEmployee;
	Destination? _selectedDestination;

	string _mail = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		await _employeeService.InitializeAsync();
		_employees = _employeeService.GetAllEmployees().ToList();

		await _destinationService.InitializeAsync();
		_destinations = _destinationService.GetAllDestinations().ToList();

		// Get local storage
		var storedName = await _localStorage.GetItemAsync<string>("selectedEmployee");

		if (!string.IsNullOrWhiteSpace(storedName))
		{
			_selectedEmployee = _employees.FirstOrDefault(e => e.Name == storedName);

			if (_selectedEmployee != null)
			{
				_isHidden = false;
			}
		}
	}

	private async Task RegisterDriver(Employee selectedEmployee)
	{
		_selectedEmployee = selectedEmployee;
		_isHidden = false;

		// Save selected employee in local storage for a smoother user experience next time
		await _localStorage.SetItemAsync("selectedEmployee", selectedEmployee.Name);
	}
}